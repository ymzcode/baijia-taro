import Selection from"./states/Selection";import Active from"./states/Active";import Hover from"./states/Hover";import Drawing from"./states/Drawing";import randomInt from"./function/randomInt";import getInterRect from"./function/getInterRect";import convertDimension from"./function/convertDimension";import array from"./util/array";import object from"./util/object";import Emitter from"./Emitter";import Painter from"./Painter";const INDEX_ACTIVE=0,INDEX_HOVER=1,INDEX_SELECTION=2;export default class Canvas{constructor(t,e,i,s=10){const r=this;r.resize(e,i,!0);const h=r.painter=new Painter(t,e,i),n=r.emitter=new Emitter;let o;r.states=[],r.histories=[{}],r.historyIndex=0,r.maxHistorySize=s;let a=function(){r.refresh()};n.on(Emitter.MOUSE_MOVE,function(t){let e;array.each([r.states,r.getShapes()],function(i){if(array.each(i,function(i){if(i&&!1!==i.isPointInPath(h,t.x,t.y))return e=i,!1},!0),e)return!1}),e!==o&&(o&&n.fire(Emitter.SHAPE_LEAVE,{shape:o}),e&&n.fire(Emitter.SHAPE_ENTER,{shape:e}),o=e)}).on(Emitter.HOVER_SHAPE_CHANGE,a).on(Emitter.ACTIVE_SHAPE_CHANGE,a).on(Emitter.ACTIVE_RECT_CHANGE_END,a).on(Emitter.CLEAR,function(){r.clear()}).on(Emitter.ACTIVE_RECT_CHANGE_START,function(){let t=r.states[INDEX_ACTIVE].getShapes();t.length&&r.editShapes(t,null,!0)}).on(Emitter.ACTIVE_SHAPE_DELETE,function(){r.removeActiveShapes()}).on(Emitter.SELECTION_RECT_CHANGE,function(t){r.states[INDEX_ACTIVE].setShapes(h,r.getShapes().filter(function(e){if(getInterRect(e.getRect(h),t.rect))return!0}))}).on(Emitter.SELECTION_START,function(){}).on(Emitter.SELECTION_END,function(){r.refresh()}).on(Emitter.SHAPE_DRAWING_START,function(t){}).on(Emitter.SHAPE_DRAWING_END,function(t){const{shape:e}=t;if(e){const t={x:0,y:0,width:r.width,height:r.height};e.validate&&!e.validate(h,t)||r.addShape(e,!0)}}).on(Emitter.ACTIVE_DRAG_BOX_HOVER,function(t){let{name:e}=t;e&&(e+="-resize")})}resize(t,e,i){const{histories:s,historyIndex:r}=this;if(this.width=t,this.height=e,s){const i=s[r];i.shapes&&i.width&&i.height&&convertDimension(i.shapes,i.width,i.height,t,e),i.width=t,i.height=e}i||this.refresh()}addShape(t,e){this.addShapes([t],e)}addShapes(t,e){let i=this,s=i.getShapes();if(i.save(),array.each(t,function(t){array.push(s,t)}),e){const{painter:e}=this,i=function(t){t&&t.draw(e)};array.each(t,i)}else i.refresh();i.emitter.fire(Emitter.SHAPE_ADD,{shapes:t})}removeShape(t,e){this.removeShapes([t],e)}removeShapes(t,e){let i=this;i.save();let s={};array.each(t,function(t){s[t.number]=1});let r=[],h=i.getShapes();array.each(h,function(t,e){s[t.number]&&(h.splice(e,1),r.push(t))},!0),e||i.refresh(),i.emitter.fire(Emitter.SHAPE_REMOVE,{shapes:r})}removeActiveShapes(){let t=this.states[INDEX_ACTIVE];if(t){let e=t.getShapes();e.length&&(this.removeShapes(e,!0),t.setShapes(this.painter,[]))}}editShapes(t,e,i){let s=this;s.save();let r=s.getShapes();array.each(t,function(i,s){let h=r.indexOf(i);if(h>=0){let n=i.clone();e&&object.extend(n,e),r[h]=t[s]=n}}),i||s.refresh(),s.emitter.fire(Emitter.SHAPE_UPDATE,{shapes:t})}getShapes(){const t=this.histories[this.historyIndex];return t.shapes||(t.shapes=[])}drawing(t){const{states:e,emitter:i,painter:s,config:r}=this,h=function(t){e[t]&&(e[t].destroy(),e[t]=null)},n=function(t){h(INDEX_SELECTION),e[INDEX_SELECTION]=t};t?(h(INDEX_ACTIVE),h(INDEX_HOVER),n(new Drawing({createShape:function(){const e=new t(r);return e.number=""+randomInt(10),e}},i,s))):!1!==t?(e[INDEX_ACTIVE]||(e[INDEX_ACTIVE]=new Active({},i,s)),e[INDEX_HOVER]||(e[INDEX_HOVER]=new Hover(r,i)),n(new Selection({},i))):(h(INDEX_ACTIVE),h(INDEX_HOVER),n())}apply(t){const e=this.states[INDEX_ACTIVE];if(e){const i=e.getShapes();i.length&&this.editShapes(i,t)}this.config=t}refresh(){const{painter:t}=this;t.clear();const e=function(e){e&&e.draw(t)};array.each(this.getShapes(),e),array.each(this.states,e)}clear(){this.removeShapes(this.getShapes())}save(){const{histories:t,maxHistorySize:e,historyIndex:i}=this;t.length>i+1&&t.splice(i+1);const s={width:this.width,height:this.height,shapes:this.getShapes()};t.length>0?t.splice(t.length,0,s):t.push(object.copy(s),s),t.length>e+1&&t.splice(0,1),this.historyIndex=t.length-1}hasPrev(){return!!this.histories[this.historyIndex-1]}prev(){if(this.hasPrev()){this.historyIndex--,this.emitter.fire(Emitter.RESET);const{width:t,height:e,shapes:i}=this.histories[this.historyIndex];return i&&convertDimension(i,t,e,this.width,this.height),!0}}hasNext(){return!!this.histories[this.historyIndex+1]}next(){if(this.hasNext()){this.historyIndex++,this.emitter.fire(Emitter.RESET);const{width:t,height:e,shapes:i}=this.histories[this.historyIndex];return i&&convertDimension(i,t,e,this.width,this.height),this.refresh(),!0}}dispose(){this.emitter.dispose()}};import Arrow from"./shapes/Arrow";import Doodle from"./shapes/Doodle";import Heart from"./shapes/Heart";import Line from"./shapes/Line";import Oval from"./shapes/Oval";import Polygon from"./shapes/Polygon";import Rect from"./shapes/Rect";import Star from"./shapes/Star";import Text from"./shapes/Text";Canvas.Emitter=Emitter,Canvas.shapes={Arrow:Arrow,Doodle:Doodle,Heart:Heart,Line:Line,Oval:Oval,Polygon:Polygon,Rect:Rect,Star:Star,Text:Text};