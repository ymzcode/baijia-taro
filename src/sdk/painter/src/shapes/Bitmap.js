import Shape from"./Shape";import object from"../util/object";import containPolygon from"../contain/polygon";export default class Bitmap extends Shape{constructor(t){if(super(t),this.ratio=.6667,this.points){const{points:[t,,i]}=this;this.ratio=((i.y-t.y)/(i.x-t.x)).toFixed(4)}}get lineWidth(){return this._lineWidth}set lineWidth(t){this._lineWidth=0}draw(t){const i=this,o=this.points,{x:n,y:a}=o[0],e=o[1].x-n,s=Math.floor(e*i.ratio);t.setFillStyle(i.fillStyle),t.begin(),i.drawPath(t),i.image instanceof HTMLImageElement?t.context.drawImage(i.image,n,a,e,s):t.fill()}drawPath(t){t.drawPoints(this.points),t.close()}isPointInFill(t,i,o){return containPolygon(this.points,i,o)}toJSON(){return super.toJSON({name:"Bitmap",url:this.url,ratio:this.ratio})}};Bitmap.addBitmap=function(t,i,o){const n=new Image;"object"!=typeof i&&(i={url:i,points:[{x:0,y:0},{x:400,y:0},{x:400,y:200},{x:0,y:200}],number:""+Math.floor(9e10*Math.random()+1e10)}),n.onload=function(){(i=object.extend(object.extend({},t.config),i)).image=n,t.addShape(new Bitmap(i)),"function"==typeof o&&o()},n.crossOrigin="anonymous",n.src=i.url},Bitmap.addBitmaps=function(t,i){i instanceof Array&&i[0]&&Bitmap.addBitmap(t,i[0],function(){i.unshift(),Bitmap.addBitmaps(t,i)})};