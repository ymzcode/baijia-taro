import State from"./State";import Emitter from"../Emitter";import constant from"../constant";import array from"../util/array";export default class Hover extends State{constructor(e,t){super(e,t);let r,a,n=this;n.shapeEnterHandler=function(e){let{shape:E}=e;a||E.state||r&&array.has(r,E)||(n.shape=E,t.fire(Emitter.HOVER_SHAPE_CHANGE,{shape:E}))},n.shapeLeaveHandler=function(){n.shape&&(n.shape=null,t.fire(Emitter.HOVER_SHAPE_CHANGE,{shape:null}))},n.drawingStartHandler=function(){a=!0},n.drawingEndHandler=function(){a=!1},n.activeShapeChangeHandler=function(e){r=e.shapes,array.has(r,n.shape)&&(n.shape=null)},n.resetHandler=function(){n.shape=null},n.on(Emitter.SHAPE_ENTER,n.shapeEnterHandler).on(Emitter.SHAPE_LEAVE,n.shapeLeaveHandler).on(Emitter.SHAPE_DRAWING_START,n.drawingStartHandler).on(Emitter.SHAPE_DRAWING_END,n.drawingEndHandler).on(Emitter.ACTIVE_SHAPE_CHANGE,n.activeShapeChangeHandler).on(Emitter.RESET,n.resetHandler)}destroy(){this.off(Emitter.SHAPE_ENTER,this.shapeEnterHandler).off(Emitter.SHAPE_LEAVE,this.shapeLeaveHandler).off(Emitter.SHAPE_DRAWING_START,this.drawingStartHandler).off(Emitter.SHAPE_DRAWING_END,this.drawingEndHandler).off(Emitter.ACTIVE_SHAPE_CHANGE,this.activeShapeChangeHandler).off(Emitter.RESET,this.resetHandler)}isPointInPath(e,t,r){return!1}draw(e){let{shape:t,hoverThickness:r,hoverColor:a}=this;t&&(e.disableShadow(),e.setLineWidth(r*constant.DEVICE_PIXEL_RATIO),e.setStrokeStyle(a),e.begin(),t.drawPath(e),e.stroke())}};